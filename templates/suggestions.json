{
    "Web Application": {
        "techStack": "HTML, CSS, JavaScript, React, Node.js, Express",
        "tools": "VS Code, Git, npm, Webpack, Babel",
        "setup": "1. Clone the repo: `git clone ...`\n2. Install dependencies: `npm install`\n3. Start the development server: `npm start`",
        "features": "User Authentication\nResponsive Design\nRESTful API\nDatabase Integration\nAdmin Dashboard"
    },
    "Mobile Application": {
        "techStack": "React Native, TypeScript, Firebase",
        "tools": "VS Code, Git, npm, Android Studio, Xcode",
        "setup": "1. Clone the repo: `git clone ...`\n2. Install dependencies: `npm install`\n3. Run on iOS: `npx react-native run-ios`\n4. Run on Android: `npx react-native run-android`",
        "features": "Push Notifications\nOffline Access\nIn-App Purchases\nBiometric Authentication\nLocation-Based Services"
    },
    "Desktop Application": {
        "techStack": "Electron, TypeScript, React",
        "tools": "VS Code, Git, npm, Electron Builder",
        "setup": "1. Clone the repo: `git clone ...`\n2. Install dependencies: `npm install`\n3. Run the app: `npm start`",
        "features": "Cross-Platform Support (Windows, macOS, Linux)\nAuto-Updates\nNative OS Integration\nFile System Access\nCustomizable UI"
    },
    "CLI Tool": {
        "techStack": "Node.js, TypeScript, Commander.js",
        "tools": "VS Code, Git, npm, Jest",
        "setup": "1. Clone the repo: `git clone ...`\n2. Install dependencies: `npm install`\n3. Link the package for development: `npm link`",
        "features": "Argument Parsing\nInteractive Prompts\nPiped Input/Output\nColorized Output\nConfiguration File Support"
    },
    "Library / Framework": {
        "techStack": "TypeScript, Rollup.js",
        "tools": "VS Code, Git, npm, Jest",
        "setup": "1. Install the package: `npm install your-library`\n2. Import and use in your project.",
        "features": "Extensible Plugin Architecture\nComprehensive Test Suite\nZero-Dependency\nType-Safe API\nDetailed Documentation"
    },
    "Data Science Project": {
        "techStack": "Python, Pandas, Scikit-learn, Matplotlib",
        "tools": "Jupyter Notebook, VS Code, Git, Pip",
        "setup": "1. Clone the repo: `git clone ...`\n2. Create a virtual environment: `python -m venv .venv`\n3. Install dependencies: `pip install -r requirements.txt`",
        "features": "Data Visualization\nModel Training & Evaluation\nJupyter Notebook Integration\nETL Pipelines\nInteractive Dashboards"
    },
    "Game": {
        "techStack": "C#, Unity",
        "tools": "Unity Editor, VS Code, Git",
        "setup": "1. Clone the repo: `git clone ...`\n2. Open the project folder in the Unity Hub.\n3. Select the correct Unity Editor version and open the project.",
        "features": "Physics Engine\n2D/3D Rendering\nAsset Management\nLevel Editor\nMultiplayer Support"
    },
    "Other": {
        "techStack": "",
        "tools": "",
        "setup": "",
        "features": ""
    }
}